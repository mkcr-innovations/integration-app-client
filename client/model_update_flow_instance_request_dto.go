/*
Integration Engine API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the UpdateFlowInstanceRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFlowInstanceRequestDto{}

// UpdateFlowInstanceRequestDto struct for UpdateFlowInstanceRequestDto
type UpdateFlowInstanceRequestDto struct {
	Name *string `json:"name,omitempty"`
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	Nodes map[string]interface{} `json:"nodes,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ArchivedAt *time.Time `json:"archivedAt,omitempty"`
}

// NewUpdateFlowInstanceRequestDto instantiates a new UpdateFlowInstanceRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFlowInstanceRequestDto() *UpdateFlowInstanceRequestDto {
	this := UpdateFlowInstanceRequestDto{}
	return &this
}

// NewUpdateFlowInstanceRequestDtoWithDefaults instantiates a new UpdateFlowInstanceRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFlowInstanceRequestDtoWithDefaults() *UpdateFlowInstanceRequestDto {
	this := UpdateFlowInstanceRequestDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateFlowInstanceRequestDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlowInstanceRequestDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateFlowInstanceRequestDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateFlowInstanceRequestDto) SetName(v string) {
	o.Name = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *UpdateFlowInstanceRequestDto) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlowInstanceRequestDto) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *UpdateFlowInstanceRequestDto) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *UpdateFlowInstanceRequestDto) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *UpdateFlowInstanceRequestDto) GetNodes() map[string]interface{} {
	if o == nil || IsNil(o.Nodes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlowInstanceRequestDto) GetNodesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Nodes) {
		return map[string]interface{}{}, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *UpdateFlowInstanceRequestDto) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given map[string]interface{} and assigns it to the Nodes field.
func (o *UpdateFlowInstanceRequestDto) SetNodes(v map[string]interface{}) {
	o.Nodes = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateFlowInstanceRequestDto) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlowInstanceRequestDto) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateFlowInstanceRequestDto) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateFlowInstanceRequestDto) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *UpdateFlowInstanceRequestDto) GetArchivedAt() time.Time {
	if o == nil || IsNil(o.ArchivedAt) {
		var ret time.Time
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFlowInstanceRequestDto) GetArchivedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ArchivedAt) {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *UpdateFlowInstanceRequestDto) HasArchivedAt() bool {
	if o != nil && !IsNil(o.ArchivedAt) {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given time.Time and assigns it to the ArchivedAt field.
func (o *UpdateFlowInstanceRequestDto) SetArchivedAt(v time.Time) {
	o.ArchivedAt = &v
}

func (o UpdateFlowInstanceRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFlowInstanceRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ArchivedAt) {
		toSerialize["archivedAt"] = o.ArchivedAt
	}
	return toSerialize, nil
}

type NullableUpdateFlowInstanceRequestDto struct {
	value *UpdateFlowInstanceRequestDto
	isSet bool
}

func (v NullableUpdateFlowInstanceRequestDto) Get() *UpdateFlowInstanceRequestDto {
	return v.value
}

func (v *NullableUpdateFlowInstanceRequestDto) Set(val *UpdateFlowInstanceRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFlowInstanceRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFlowInstanceRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFlowInstanceRequestDto(val *UpdateFlowInstanceRequestDto) *NullableUpdateFlowInstanceRequestDto {
	return &NullableUpdateFlowInstanceRequestDto{value: val, isSet: true}
}

func (v NullableUpdateFlowInstanceRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFlowInstanceRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


