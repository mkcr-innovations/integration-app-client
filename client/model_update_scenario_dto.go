/*
Integration.app API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateScenarioDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateScenarioDto{}

// UpdateScenarioDto struct for UpdateScenarioDto
type UpdateScenarioDto struct {
	Name *string `json:"name,omitempty"`
	Key *string `json:"key,omitempty"`
	ShortDescription *string `json:"shortDescription,omitempty"`
	Description *string `json:"description,omitempty"`
	Elements []map[string]interface{} `json:"elements,omitempty"`
	Todos []map[string]interface{} `json:"todos,omitempty"`
}

// NewUpdateScenarioDto instantiates a new UpdateScenarioDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateScenarioDto() *UpdateScenarioDto {
	this := UpdateScenarioDto{}
	return &this
}

// NewUpdateScenarioDtoWithDefaults instantiates a new UpdateScenarioDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateScenarioDtoWithDefaults() *UpdateScenarioDto {
	this := UpdateScenarioDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateScenarioDto) SetName(v string) {
	o.Name = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *UpdateScenarioDto) SetKey(v string) {
	o.Key = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *UpdateScenarioDto) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateScenarioDto) SetDescription(v string) {
	o.Description = &v
}

// GetElements returns the Elements field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetElements() []map[string]interface{} {
	if o == nil || IsNil(o.Elements) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetElementsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Elements) {
		return nil, false
	}
	return o.Elements, true
}

// HasElements returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasElements() bool {
	if o != nil && !IsNil(o.Elements) {
		return true
	}

	return false
}

// SetElements gets a reference to the given []map[string]interface{} and assigns it to the Elements field.
func (o *UpdateScenarioDto) SetElements(v []map[string]interface{}) {
	o.Elements = v
}

// GetTodos returns the Todos field value if set, zero value otherwise.
func (o *UpdateScenarioDto) GetTodos() []map[string]interface{} {
	if o == nil || IsNil(o.Todos) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Todos
}

// GetTodosOk returns a tuple with the Todos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioDto) GetTodosOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Todos) {
		return nil, false
	}
	return o.Todos, true
}

// HasTodos returns a boolean if a field has been set.
func (o *UpdateScenarioDto) HasTodos() bool {
	if o != nil && !IsNil(o.Todos) {
		return true
	}

	return false
}

// SetTodos gets a reference to the given []map[string]interface{} and assigns it to the Todos field.
func (o *UpdateScenarioDto) SetTodos(v []map[string]interface{}) {
	o.Todos = v
}

func (o UpdateScenarioDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateScenarioDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Elements) {
		toSerialize["elements"] = o.Elements
	}
	if !IsNil(o.Todos) {
		toSerialize["todos"] = o.Todos
	}
	return toSerialize, nil
}

type NullableUpdateScenarioDto struct {
	value *UpdateScenarioDto
	isSet bool
}

func (v NullableUpdateScenarioDto) Get() *UpdateScenarioDto {
	return v.value
}

func (v *NullableUpdateScenarioDto) Set(val *UpdateScenarioDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateScenarioDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateScenarioDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateScenarioDto(val *UpdateScenarioDto) *NullableUpdateScenarioDto {
	return &NullableUpdateScenarioDto{value: val, isSet: true}
}

func (v NullableUpdateScenarioDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateScenarioDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


