/*
Integration.app API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ScenarioDtoElementsInnerElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScenarioDtoElementsInnerElement{}

// ScenarioDtoElementsInnerElement struct for ScenarioDtoElementsInnerElement
type ScenarioDtoElementsInnerElement struct {
	Revision *string `json:"revision,omitempty"`
	IsCustomized *bool `json:"isCustomized,omitempty"`
	Id *string `json:"id,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Config *ScenarioDtoElementsInnerElementConfig `json:"config,omitempty"`
	IsDeployed *bool `json:"isDeployed,omitempty"`
	AppliedToIntegrations []ScenarioDtoElementsInnerElementAppliedToIntegrationsInner `json:"appliedToIntegrations,omitempty"`
}

// NewScenarioDtoElementsInnerElement instantiates a new ScenarioDtoElementsInnerElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScenarioDtoElementsInnerElement() *ScenarioDtoElementsInnerElement {
	this := ScenarioDtoElementsInnerElement{}
	return &this
}

// NewScenarioDtoElementsInnerElementWithDefaults instantiates a new ScenarioDtoElementsInnerElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScenarioDtoElementsInnerElementWithDefaults() *ScenarioDtoElementsInnerElement {
	this := ScenarioDtoElementsInnerElement{}
	return &this
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *ScenarioDtoElementsInnerElement) SetRevision(v string) {
	o.Revision = &v
}

// GetIsCustomized returns the IsCustomized field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetIsCustomized() bool {
	if o == nil || IsNil(o.IsCustomized) {
		var ret bool
		return ret
	}
	return *o.IsCustomized
}

// GetIsCustomizedOk returns a tuple with the IsCustomized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetIsCustomizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCustomized) {
		return nil, false
	}
	return o.IsCustomized, true
}

// HasIsCustomized returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasIsCustomized() bool {
	if o != nil && !IsNil(o.IsCustomized) {
		return true
	}

	return false
}

// SetIsCustomized gets a reference to the given bool and assigns it to the IsCustomized field.
func (o *ScenarioDtoElementsInnerElement) SetIsCustomized(v bool) {
	o.IsCustomized = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ScenarioDtoElementsInnerElement) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ScenarioDtoElementsInnerElement) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScenarioDtoElementsInnerElement) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ScenarioDtoElementsInnerElement) SetType(v string) {
	o.Type = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetConfig() ScenarioDtoElementsInnerElementConfig {
	if o == nil || IsNil(o.Config) {
		var ret ScenarioDtoElementsInnerElementConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetConfigOk() (*ScenarioDtoElementsInnerElementConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ScenarioDtoElementsInnerElementConfig and assigns it to the Config field.
func (o *ScenarioDtoElementsInnerElement) SetConfig(v ScenarioDtoElementsInnerElementConfig) {
	o.Config = &v
}

// GetIsDeployed returns the IsDeployed field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetIsDeployed() bool {
	if o == nil || IsNil(o.IsDeployed) {
		var ret bool
		return ret
	}
	return *o.IsDeployed
}

// GetIsDeployedOk returns a tuple with the IsDeployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetIsDeployedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeployed) {
		return nil, false
	}
	return o.IsDeployed, true
}

// HasIsDeployed returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasIsDeployed() bool {
	if o != nil && !IsNil(o.IsDeployed) {
		return true
	}

	return false
}

// SetIsDeployed gets a reference to the given bool and assigns it to the IsDeployed field.
func (o *ScenarioDtoElementsInnerElement) SetIsDeployed(v bool) {
	o.IsDeployed = &v
}

// GetAppliedToIntegrations returns the AppliedToIntegrations field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElement) GetAppliedToIntegrations() []ScenarioDtoElementsInnerElementAppliedToIntegrationsInner {
	if o == nil || IsNil(o.AppliedToIntegrations) {
		var ret []ScenarioDtoElementsInnerElementAppliedToIntegrationsInner
		return ret
	}
	return o.AppliedToIntegrations
}

// GetAppliedToIntegrationsOk returns a tuple with the AppliedToIntegrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElement) GetAppliedToIntegrationsOk() ([]ScenarioDtoElementsInnerElementAppliedToIntegrationsInner, bool) {
	if o == nil || IsNil(o.AppliedToIntegrations) {
		return nil, false
	}
	return o.AppliedToIntegrations, true
}

// HasAppliedToIntegrations returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElement) HasAppliedToIntegrations() bool {
	if o != nil && !IsNil(o.AppliedToIntegrations) {
		return true
	}

	return false
}

// SetAppliedToIntegrations gets a reference to the given []ScenarioDtoElementsInnerElementAppliedToIntegrationsInner and assigns it to the AppliedToIntegrations field.
func (o *ScenarioDtoElementsInnerElement) SetAppliedToIntegrations(v []ScenarioDtoElementsInnerElementAppliedToIntegrationsInner) {
	o.AppliedToIntegrations = v
}

func (o ScenarioDtoElementsInnerElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScenarioDtoElementsInnerElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.IsCustomized) {
		toSerialize["isCustomized"] = o.IsCustomized
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.IsDeployed) {
		toSerialize["isDeployed"] = o.IsDeployed
	}
	if !IsNil(o.AppliedToIntegrations) {
		toSerialize["appliedToIntegrations"] = o.AppliedToIntegrations
	}
	return toSerialize, nil
}

type NullableScenarioDtoElementsInnerElement struct {
	value *ScenarioDtoElementsInnerElement
	isSet bool
}

func (v NullableScenarioDtoElementsInnerElement) Get() *ScenarioDtoElementsInnerElement {
	return v.value
}

func (v *NullableScenarioDtoElementsInnerElement) Set(val *ScenarioDtoElementsInnerElement) {
	v.value = val
	v.isSet = true
}

func (v NullableScenarioDtoElementsInnerElement) IsSet() bool {
	return v.isSet
}

func (v *NullableScenarioDtoElementsInnerElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScenarioDtoElementsInnerElement(val *ScenarioDtoElementsInnerElement) *NullableScenarioDtoElementsInnerElement {
	return &NullableScenarioDtoElementsInnerElement{value: val, isSet: true}
}

func (v NullableScenarioDtoElementsInnerElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScenarioDtoElementsInnerElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


