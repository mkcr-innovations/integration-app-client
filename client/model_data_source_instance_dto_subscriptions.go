/*
Integration Engine API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DataSourceInstanceDtoSubscriptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataSourceInstanceDtoSubscriptions{}

// DataSourceInstanceDtoSubscriptions struct for DataSourceInstanceDtoSubscriptions
type DataSourceInstanceDtoSubscriptions struct {
	Created map[string]interface{} `json:"created"`
	Updated map[string]interface{} `json:"updated"`
	Deleted map[string]interface{} `json:"deleted"`
}

type _DataSourceInstanceDtoSubscriptions DataSourceInstanceDtoSubscriptions

// NewDataSourceInstanceDtoSubscriptions instantiates a new DataSourceInstanceDtoSubscriptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataSourceInstanceDtoSubscriptions(created map[string]interface{}, updated map[string]interface{}, deleted map[string]interface{}) *DataSourceInstanceDtoSubscriptions {
	this := DataSourceInstanceDtoSubscriptions{}
	this.Created = created
	this.Updated = updated
	this.Deleted = deleted
	return &this
}

// NewDataSourceInstanceDtoSubscriptionsWithDefaults instantiates a new DataSourceInstanceDtoSubscriptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataSourceInstanceDtoSubscriptionsWithDefaults() *DataSourceInstanceDtoSubscriptions {
	this := DataSourceInstanceDtoSubscriptions{}
	return &this
}

// GetCreated returns the Created field value
func (o *DataSourceInstanceDtoSubscriptions) GetCreated() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *DataSourceInstanceDtoSubscriptions) GetCreatedOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Created, true
}

// SetCreated sets field value
func (o *DataSourceInstanceDtoSubscriptions) SetCreated(v map[string]interface{}) {
	o.Created = v
}

// GetUpdated returns the Updated field value
func (o *DataSourceInstanceDtoSubscriptions) GetUpdated() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *DataSourceInstanceDtoSubscriptions) GetUpdatedOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Updated, true
}

// SetUpdated sets field value
func (o *DataSourceInstanceDtoSubscriptions) SetUpdated(v map[string]interface{}) {
	o.Updated = v
}

// GetDeleted returns the Deleted field value
func (o *DataSourceInstanceDtoSubscriptions) GetDeleted() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *DataSourceInstanceDtoSubscriptions) GetDeletedOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Deleted, true
}

// SetDeleted sets field value
func (o *DataSourceInstanceDtoSubscriptions) SetDeleted(v map[string]interface{}) {
	o.Deleted = v
}

func (o DataSourceInstanceDtoSubscriptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataSourceInstanceDtoSubscriptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["updated"] = o.Updated
	toSerialize["deleted"] = o.Deleted
	return toSerialize, nil
}

func (o *DataSourceInstanceDtoSubscriptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"updated",
		"deleted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDataSourceInstanceDtoSubscriptions := _DataSourceInstanceDtoSubscriptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDataSourceInstanceDtoSubscriptions)

	if err != nil {
		return err
	}

	*o = DataSourceInstanceDtoSubscriptions(varDataSourceInstanceDtoSubscriptions)

	return err
}

type NullableDataSourceInstanceDtoSubscriptions struct {
	value *DataSourceInstanceDtoSubscriptions
	isSet bool
}

func (v NullableDataSourceInstanceDtoSubscriptions) Get() *DataSourceInstanceDtoSubscriptions {
	return v.value
}

func (v *NullableDataSourceInstanceDtoSubscriptions) Set(val *DataSourceInstanceDtoSubscriptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSourceInstanceDtoSubscriptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSourceInstanceDtoSubscriptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSourceInstanceDtoSubscriptions(val *DataSourceInstanceDtoSubscriptions) *NullableDataSourceInstanceDtoSubscriptions {
	return &NullableDataSourceInstanceDtoSubscriptions{value: val, isSet: true}
}

func (v NullableDataSourceInstanceDtoSubscriptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSourceInstanceDtoSubscriptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


