/*
Integration.app API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateDataLinkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDataLinkDto{}

// CreateDataLinkDto struct for CreateDataLinkDto
type CreateDataLinkDto struct {
	Direction *string `json:"direction,omitempty"`
	AppRecordId *string `json:"appRecordId,omitempty"`
	ExternalRecordId *string `json:"externalRecordId,omitempty"`
}

// NewCreateDataLinkDto instantiates a new CreateDataLinkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDataLinkDto() *CreateDataLinkDto {
	this := CreateDataLinkDto{}
	return &this
}

// NewCreateDataLinkDtoWithDefaults instantiates a new CreateDataLinkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDataLinkDtoWithDefaults() *CreateDataLinkDto {
	this := CreateDataLinkDto{}
	return &this
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *CreateDataLinkDto) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataLinkDto) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *CreateDataLinkDto) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *CreateDataLinkDto) SetDirection(v string) {
	o.Direction = &v
}

// GetAppRecordId returns the AppRecordId field value if set, zero value otherwise.
func (o *CreateDataLinkDto) GetAppRecordId() string {
	if o == nil || IsNil(o.AppRecordId) {
		var ret string
		return ret
	}
	return *o.AppRecordId
}

// GetAppRecordIdOk returns a tuple with the AppRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataLinkDto) GetAppRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppRecordId) {
		return nil, false
	}
	return o.AppRecordId, true
}

// HasAppRecordId returns a boolean if a field has been set.
func (o *CreateDataLinkDto) HasAppRecordId() bool {
	if o != nil && !IsNil(o.AppRecordId) {
		return true
	}

	return false
}

// SetAppRecordId gets a reference to the given string and assigns it to the AppRecordId field.
func (o *CreateDataLinkDto) SetAppRecordId(v string) {
	o.AppRecordId = &v
}

// GetExternalRecordId returns the ExternalRecordId field value if set, zero value otherwise.
func (o *CreateDataLinkDto) GetExternalRecordId() string {
	if o == nil || IsNil(o.ExternalRecordId) {
		var ret string
		return ret
	}
	return *o.ExternalRecordId
}

// GetExternalRecordIdOk returns a tuple with the ExternalRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataLinkDto) GetExternalRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRecordId) {
		return nil, false
	}
	return o.ExternalRecordId, true
}

// HasExternalRecordId returns a boolean if a field has been set.
func (o *CreateDataLinkDto) HasExternalRecordId() bool {
	if o != nil && !IsNil(o.ExternalRecordId) {
		return true
	}

	return false
}

// SetExternalRecordId gets a reference to the given string and assigns it to the ExternalRecordId field.
func (o *CreateDataLinkDto) SetExternalRecordId(v string) {
	o.ExternalRecordId = &v
}

func (o CreateDataLinkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDataLinkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.AppRecordId) {
		toSerialize["appRecordId"] = o.AppRecordId
	}
	if !IsNil(o.ExternalRecordId) {
		toSerialize["externalRecordId"] = o.ExternalRecordId
	}
	return toSerialize, nil
}

type NullableCreateDataLinkDto struct {
	value *CreateDataLinkDto
	isSet bool
}

func (v NullableCreateDataLinkDto) Get() *CreateDataLinkDto {
	return v.value
}

func (v *NullableCreateDataLinkDto) Set(val *CreateDataLinkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDataLinkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDataLinkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDataLinkDto(val *CreateDataLinkDto) *NullableCreateDataLinkDto {
	return &NullableCreateDataLinkDto{value: val, isSet: true}
}

func (v NullableCreateDataLinkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDataLinkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


