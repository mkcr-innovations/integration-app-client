/*
Integration Engine API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConnectionRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionRequestDto{}

// ConnectionRequestDto struct for ConnectionRequestDto
type ConnectionRequestDto struct {
	Path string `json:"path"`
	Method string `json:"method"`
	PathParameters map[string]interface{} `json:"pathParameters,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	Query map[string]interface{} `json:"query,omitempty"`
	Headers map[string]interface{} `json:"headers,omitempty"`
}

type _ConnectionRequestDto ConnectionRequestDto

// NewConnectionRequestDto instantiates a new ConnectionRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionRequestDto(path string, method string) *ConnectionRequestDto {
	this := ConnectionRequestDto{}
	this.Path = path
	this.Method = method
	return &this
}

// NewConnectionRequestDtoWithDefaults instantiates a new ConnectionRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionRequestDtoWithDefaults() *ConnectionRequestDto {
	this := ConnectionRequestDto{}
	return &this
}

// GetPath returns the Path field value
func (o *ConnectionRequestDto) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *ConnectionRequestDto) SetPath(v string) {
	o.Path = v
}

// GetMethod returns the Method field value
func (o *ConnectionRequestDto) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ConnectionRequestDto) SetMethod(v string) {
	o.Method = v
}

// GetPathParameters returns the PathParameters field value if set, zero value otherwise.
func (o *ConnectionRequestDto) GetPathParameters() map[string]interface{} {
	if o == nil || IsNil(o.PathParameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.PathParameters
}

// GetPathParametersOk returns a tuple with the PathParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetPathParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PathParameters) {
		return map[string]interface{}{}, false
	}
	return o.PathParameters, true
}

// HasPathParameters returns a boolean if a field has been set.
func (o *ConnectionRequestDto) HasPathParameters() bool {
	if o != nil && !IsNil(o.PathParameters) {
		return true
	}

	return false
}

// SetPathParameters gets a reference to the given map[string]interface{} and assigns it to the PathParameters field.
func (o *ConnectionRequestDto) SetPathParameters(v map[string]interface{}) {
	o.PathParameters = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ConnectionRequestDto) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ConnectionRequestDto) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ConnectionRequestDto) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ConnectionRequestDto) GetQuery() map[string]interface{} {
	if o == nil || IsNil(o.Query) {
		var ret map[string]interface{}
		return ret
	}
	return o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetQueryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Query) {
		return map[string]interface{}{}, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ConnectionRequestDto) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given map[string]interface{} and assigns it to the Query field.
func (o *ConnectionRequestDto) SetQuery(v map[string]interface{}) {
	o.Query = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *ConnectionRequestDto) GetHeaders() map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestDto) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *ConnectionRequestDto) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *ConnectionRequestDto) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

func (o ConnectionRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["path"] = o.Path
	toSerialize["method"] = o.Method
	if !IsNil(o.PathParameters) {
		toSerialize["pathParameters"] = o.PathParameters
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	return toSerialize, nil
}

func (o *ConnectionRequestDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path",
		"method",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectionRequestDto := _ConnectionRequestDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectionRequestDto)

	if err != nil {
		return err
	}

	*o = ConnectionRequestDto(varConnectionRequestDto)

	return err
}

type NullableConnectionRequestDto struct {
	value *ConnectionRequestDto
	isSet bool
}

func (v NullableConnectionRequestDto) Get() *ConnectionRequestDto {
	return v.value
}

func (v *NullableConnectionRequestDto) Set(val *ConnectionRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionRequestDto(val *ConnectionRequestDto) *NullableConnectionRequestDto {
	return &NullableConnectionRequestDto{value: val, isSet: true}
}

func (v NullableConnectionRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


