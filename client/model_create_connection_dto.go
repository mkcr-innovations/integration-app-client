/*
Integration.app API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateConnectionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectionDto{}

// CreateConnectionDto struct for CreateConnectionDto
type CreateConnectionDto struct {
	IntegrationId *string `json:"integrationId,omitempty"`
	Name *string `json:"name,omitempty"`
	Credentials *string `json:"credentials,omitempty"`
}

// NewCreateConnectionDto instantiates a new CreateConnectionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectionDto() *CreateConnectionDto {
	this := CreateConnectionDto{}
	return &this
}

// NewCreateConnectionDtoWithDefaults instantiates a new CreateConnectionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectionDtoWithDefaults() *CreateConnectionDto {
	this := CreateConnectionDto{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *CreateConnectionDto) GetIntegrationId() string {
	if o == nil || IsNil(o.IntegrationId) {
		var ret string
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionDto) GetIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationId) {
		return nil, false
	}
	return o.IntegrationId, true
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *CreateConnectionDto) HasIntegrationId() bool {
	if o != nil && !IsNil(o.IntegrationId) {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given string and assigns it to the IntegrationId field.
func (o *CreateConnectionDto) SetIntegrationId(v string) {
	o.IntegrationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateConnectionDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateConnectionDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateConnectionDto) SetName(v string) {
	o.Name = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *CreateConnectionDto) GetCredentials() string {
	if o == nil || IsNil(o.Credentials) {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectionDto) GetCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *CreateConnectionDto) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *CreateConnectionDto) SetCredentials(v string) {
	o.Credentials = &v
}

func (o CreateConnectionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntegrationId) {
		toSerialize["integrationId"] = o.IntegrationId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableCreateConnectionDto struct {
	value *CreateConnectionDto
	isSet bool
}

func (v NullableCreateConnectionDto) Get() *CreateConnectionDto {
	return v.value
}

func (v *NullableCreateConnectionDto) Set(val *CreateConnectionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectionDto(val *CreateConnectionDto) *NullableCreateConnectionDto {
	return &NullableCreateConnectionDto{value: val, isSet: true}
}

func (v NullableCreateConnectionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


