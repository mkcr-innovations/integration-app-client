/*
Integration Engine API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration{}

// ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration struct for ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration
type ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration struct {
	Id *string `json:"id,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	ConnectorId *string `json:"connectorId,omitempty"`
	AuthType *string `json:"authType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration

// NewScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration instantiates a new ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration() *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration {
	this := ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration{}
	return &this
}

// NewScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegrationWithDefaults instantiates a new ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegrationWithDefaults() *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration {
	this := ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) SetName(v string) {
	o.Name = &v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetConnectorId() string {
	if o == nil || IsNil(o.ConnectorId) {
		var ret string
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetConnectorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorId) {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) HasConnectorId() bool {
	if o != nil && !IsNil(o.ConnectorId) {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given string and assigns it to the ConnectorId field.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) SetConnectorId(v string) {
	o.ConnectorId = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) SetAuthType(v string) {
	o.AuthType = &v
}

func (o ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ConnectorId) {
		toSerialize["connectorId"] = o.ConnectorId
	}
	if !IsNil(o.AuthType) {
		toSerialize["authType"] = o.AuthType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) UnmarshalJSON(data []byte) (err error) {
	varScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration := _ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration{}

	err = json.Unmarshal(data, &varScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration)

	if err != nil {
		return err
	}

	*o = ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration(varScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "key")
		delete(additionalProperties, "name")
		delete(additionalProperties, "connectorId")
		delete(additionalProperties, "authType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration struct {
	value *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration
	isSet bool
}

func (v NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) Get() *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration {
	return v.value
}

func (v *NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) Set(val *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration(val *ScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) *NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration {
	return &NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration{value: val, isSet: true}
}

func (v NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScenarioDtoElementsInnerElementAppliedToIntegrationsInnerIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


