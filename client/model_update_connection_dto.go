/*
Integration Engine API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateConnectionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectionDto{}

// UpdateConnectionDto struct for UpdateConnectionDto
type UpdateConnectionDto struct {
	Name *string `json:"name,omitempty"`
	AccessToken *string `json:"accessToken,omitempty"`
	RefreshToken *string `json:"refreshToken,omitempty"`
	Credentials *string `json:"credentials,omitempty"`
}

// NewUpdateConnectionDto instantiates a new UpdateConnectionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectionDto() *UpdateConnectionDto {
	this := UpdateConnectionDto{}
	return &this
}

// NewUpdateConnectionDtoWithDefaults instantiates a new UpdateConnectionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectionDtoWithDefaults() *UpdateConnectionDto {
	this := UpdateConnectionDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateConnectionDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateConnectionDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateConnectionDto) SetName(v string) {
	o.Name = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *UpdateConnectionDto) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionDto) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *UpdateConnectionDto) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *UpdateConnectionDto) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *UpdateConnectionDto) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionDto) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *UpdateConnectionDto) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *UpdateConnectionDto) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *UpdateConnectionDto) GetCredentials() string {
	if o == nil || IsNil(o.Credentials) {
		var ret string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectionDto) GetCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *UpdateConnectionDto) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given string and assigns it to the Credentials field.
func (o *UpdateConnectionDto) SetCredentials(v string) {
	o.Credentials = &v
}

func (o UpdateConnectionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableUpdateConnectionDto struct {
	value *UpdateConnectionDto
	isSet bool
}

func (v NullableUpdateConnectionDto) Get() *UpdateConnectionDto {
	return v.value
}

func (v *NullableUpdateConnectionDto) Set(val *UpdateConnectionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectionDto(val *UpdateConnectionDto) *NullableUpdateConnectionDto {
	return &NullableUpdateConnectionDto{value: val, isSet: true}
}

func (v NullableUpdateConnectionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


