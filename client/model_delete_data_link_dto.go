/*
Integration.app API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DeleteDataLinkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteDataLinkDto{}

// DeleteDataLinkDto struct for DeleteDataLinkDto
type DeleteDataLinkDto struct {
	Direction *string `json:"direction,omitempty"`
	AppRecordId *string `json:"appRecordId,omitempty"`
	ExternalRecordId *string `json:"externalRecordId,omitempty"`
}

// NewDeleteDataLinkDto instantiates a new DeleteDataLinkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDataLinkDto() *DeleteDataLinkDto {
	this := DeleteDataLinkDto{}
	return &this
}

// NewDeleteDataLinkDtoWithDefaults instantiates a new DeleteDataLinkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDataLinkDtoWithDefaults() *DeleteDataLinkDto {
	this := DeleteDataLinkDto{}
	return &this
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *DeleteDataLinkDto) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDataLinkDto) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *DeleteDataLinkDto) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *DeleteDataLinkDto) SetDirection(v string) {
	o.Direction = &v
}

// GetAppRecordId returns the AppRecordId field value if set, zero value otherwise.
func (o *DeleteDataLinkDto) GetAppRecordId() string {
	if o == nil || IsNil(o.AppRecordId) {
		var ret string
		return ret
	}
	return *o.AppRecordId
}

// GetAppRecordIdOk returns a tuple with the AppRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDataLinkDto) GetAppRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppRecordId) {
		return nil, false
	}
	return o.AppRecordId, true
}

// HasAppRecordId returns a boolean if a field has been set.
func (o *DeleteDataLinkDto) HasAppRecordId() bool {
	if o != nil && !IsNil(o.AppRecordId) {
		return true
	}

	return false
}

// SetAppRecordId gets a reference to the given string and assigns it to the AppRecordId field.
func (o *DeleteDataLinkDto) SetAppRecordId(v string) {
	o.AppRecordId = &v
}

// GetExternalRecordId returns the ExternalRecordId field value if set, zero value otherwise.
func (o *DeleteDataLinkDto) GetExternalRecordId() string {
	if o == nil || IsNil(o.ExternalRecordId) {
		var ret string
		return ret
	}
	return *o.ExternalRecordId
}

// GetExternalRecordIdOk returns a tuple with the ExternalRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteDataLinkDto) GetExternalRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRecordId) {
		return nil, false
	}
	return o.ExternalRecordId, true
}

// HasExternalRecordId returns a boolean if a field has been set.
func (o *DeleteDataLinkDto) HasExternalRecordId() bool {
	if o != nil && !IsNil(o.ExternalRecordId) {
		return true
	}

	return false
}

// SetExternalRecordId gets a reference to the given string and assigns it to the ExternalRecordId field.
func (o *DeleteDataLinkDto) SetExternalRecordId(v string) {
	o.ExternalRecordId = &v
}

func (o DeleteDataLinkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteDataLinkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.AppRecordId) {
		toSerialize["appRecordId"] = o.AppRecordId
	}
	if !IsNil(o.ExternalRecordId) {
		toSerialize["externalRecordId"] = o.ExternalRecordId
	}
	return toSerialize, nil
}

type NullableDeleteDataLinkDto struct {
	value *DeleteDataLinkDto
	isSet bool
}

func (v NullableDeleteDataLinkDto) Get() *DeleteDataLinkDto {
	return v.value
}

func (v *NullableDeleteDataLinkDto) Set(val *DeleteDataLinkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDataLinkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDataLinkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDataLinkDto(val *DeleteDataLinkDto) *NullableDeleteDataLinkDto {
	return &NullableDeleteDataLinkDto{value: val, isSet: true}
}

func (v NullableDeleteDataLinkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDataLinkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


